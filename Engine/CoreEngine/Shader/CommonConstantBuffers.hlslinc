#define TEXTURE_USE_NONE 0
#define TEXTURE_USE_DIFFUSE (1 << 0)			// 0000 0001	
#define TEXTURE_USE_NORMAL (1 << 1)				// 0000 0010
#define TEXTURE_USE_AMBIENTOCCLUSION (1 <<2)	// 0000 0100
#define TEXTURE_USE_ROUGHNESS (1 << 3)			// 0000 1000
#define TEXTURE_USE_METALLIC (1 << 4)			// 0001 0000


// Skeletal Mesh ?
#define FLAG_MESH_STATIC (1 << 10)
#define FLAG_MESH_SKINNED (1 << 11)
#define FLAG_MESH_ANIMATED (1 << 12)

#define FLAG_RENDER_WIREFRAME (1 << 20)
#define FLAG_RENDER_NORMAL (1 << 21)
#define FLAG_RENDER_WEIGHT (1 << 22)

cbuffer CameraConstantBuffer : register(b0)
{
	float4 WorldCameraPos;
	matrix View;
	matrix Projection;
	matrix Orthographic;
};

cbuffer LightConstantBuffer : register(b1)
{
	float4 DirectionalLightPos;
	float4 DirectionalLightColor;
}

cbuffer TimeConstantBuffer : register(b2)
{
	float GameTime;
}

struct FPointLight
{
	float3 Position;
	float  Range;
	float3 Color;
	float  Intensity;
};

struct FSpotLight
{
	float3 Position;
	float  Range;
	float3 Direction;
	float  SpotAngle;
	float3 Color;
	float  Intensity;
};

cbuffer PointLightConstantBuffer : register(b3)
{
	FPointLight PointLight[127];
	uint        NumPointLights;
}

cbuffer SpotLightConstantBuffer : register(b4)
{
	FSpotLight SpotLight[127];
	uint       NumSpotLights;
}
